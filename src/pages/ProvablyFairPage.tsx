import React, { useState } from 'react'
import { motion } from 'framer-motion'
import { useGameStore } from '../store/gameStore'
import { generateMockHash } from '../lib/utils'

/**
 * Provably Fair Page Component
 * Explains the provably fair system and allows verification
 */
export const ProvablyFairPage: React.FC = () => {
  const { serverSeed, clientSeed, nonce, gameHistory, verifyRoll } = useGameStore()
  const [verificationResult, setVerificationResult] = useState<boolean | null>(null)
  const [isVerifying, setIsVerifying] = useState(false)

  const handleVerify = async () => {
    if (gameHistory.length === 0) {
      alert('No games to verify yet! Play a game first.')
      return
    }

    setIsVerifying(true)
    
    // Simulate verification delay
    await new Promise(resolve => setTimeout(resolve, 1000))
    
    const lastGame = gameHistory[0]
    const isValid = verifyRoll(lastGame.hash)
    setVerificationResult(isValid)
    setIsVerifying(false)
  }

  const generateNewSeeds = () => {
    useGameStore.getState().generateNewSeeds()
    setVerificationResult(null)
  }

  return (
    <div className="min-h-screen py-8">
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <motion.div
          className="text-center mb-12"
          initial={{ opacity: 0, y: -30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
        >
          <h1 className="text-4xl font-bold text-hilo-gold mb-4">
            üõ°Ô∏è Provably Fair
          </h1>
          <p className="text-xl text-gray-300">
            Transparent, verifiable, and fair gaming
          </p>
        </motion.div>

        {/* Explanation Section */}
        <motion.div
          className="card-hilo-glow mb-8"
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.2 }}
        >
          <h2 className="text-2xl font-bold text-hilo-gold mb-6">
            What is Provably Fair?
          </h2>
          
          <div className="space-y-4 text-gray-300">
            <p>
              Provably fair gaming ensures that every game result is transparent and verifiable. 
              Our system uses cryptographic hashing to guarantee that:
            </p>
            
            <ul className="list-disc list-inside space-y-2 ml-4">
              <li>Game results are determined before you place your bet</li>
              <li>Neither you nor the house can influence the outcome</li>
              <li>Every roll can be independently verified</li>
              <li>The system is completely transparent and auditable</li>
            </ul>
            
            <div className="bg-hilo-red/10 border border-hilo-red/30 rounded-lg p-4 mt-6">
              <p className="text-hilo-red font-semibold">
                ‚ö†Ô∏è This is a demonstration of provably fair mechanics. 
                In a real implementation, these would be cryptographically secure hashes.
              </p>
            </div>
          </div>
        </motion.div>

        {/* How It Works */}
        <motion.div
          className="card-hilo mb-8"
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.4 }}
        >
          <h2 className="text-2xl font-bold text-hilo-gold mb-6">
            How It Works
          </h2>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="text-center">
              <div className="text-4xl mb-4">üîê</div>
              <h3 className="text-lg font-semibold text-hilo-gold mb-2">1. Server Seed</h3>
              <p className="text-sm text-gray-400">
                Generated by the server before any game starts
              </p>
            </div>
            
            <div className="text-center">
              <div className="text-4xl mb-4">üé≤</div>
              <h3 className="text-lg font-semibold text-hilo-gold mb-2">2. Client Seed</h3>
              <p className="text-sm text-gray-400">
                You can provide your own seed or use a random one
              </p>
            </div>
            
            <div className="text-center">
              <div className="text-4xl mb-4">üîç</div>
              <h3 className="text-lg font-semibold text-hilo-gold mb-2">3. Verification</h3>
              <p className="text-sm text-gray-400">
                Hash the seeds together to get the game result
              </p>
            </div>
          </div>
        </motion.div>

        {/* Current Seeds */}
        <motion.div
          className="card-hilo mb-8"
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.6 }}
        >
          <h2 className="text-2xl font-bold text-hilo-gold mb-6">
            Current Game Seeds
          </h2>
          
          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-300 mb-2">
                Server Seed
              </label>
              <div className="bg-hilo-gray-light p-3 rounded-lg font-mono text-sm break-all">
                {serverSeed}
              </div>
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-300 mb-2">
                Client Seed
              </label>
              <div className="bg-hilo-gray-light p-3 rounded-lg font-mono text-sm break-all">
                {clientSeed}
              </div>
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-300 mb-2">
                Nonce (Game Number)
              </label>
              <div className="bg-hilo-gray-light p-3 rounded-lg font-mono text-sm">
                {nonce}
              </div>
            </div>
          </div>
          
          <motion.button
            onClick={generateNewSeeds}
            className="mt-4 btn-hilo-outline"
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
          >
            üîÑ Generate New Seeds
          </motion.button>
        </motion.div>

        {/* Verification Section */}
        <motion.div
          className="card-hilo-glow"
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.8 }}
        >
          <h2 className="text-2xl font-bold text-hilo-gold mb-6">
            Verify Last Game
          </h2>
          
          {gameHistory.length > 0 ? (
            <div className="space-y-4">
              <div className="bg-hilo-gray-light p-4 rounded-lg">
                <h3 className="font-semibold text-hilo-gold mb-2">Last Game Details</h3>
                <div className="space-y-2 text-sm">
                  <div>Roll: {gameHistory[0].roll}</div>
                  <div>Side: {gameHistory[0].side.toUpperCase()}</div>
                  <div>Result: {gameHistory[0].result.toUpperCase()}</div>
                  <div>Won: {gameHistory[0].won ? 'Yes' : 'No'}</div>
                  <div>Hash: {gameHistory[0].hash}</div>
                </div>
              </div>
              
              <motion.button
                onClick={handleVerify}
                disabled={isVerifying}
                className={`
                  btn-hilo-primary w-full
                  ${isVerifying ? 'opacity-50 cursor-not-allowed' : ''}
                `}
                whileHover={!isVerifying ? { scale: 1.02 } : {}}
                whileTap={!isVerifying ? { scale: 0.98 } : {}}
              >
                {isVerifying ? 'Verifying...' : 'üîç Verify Roll'}
              </motion.button>
              
              {verificationResult !== null && (
                <motion.div
                  className={`
                    p-4 rounded-lg text-center font-semibold
                    ${verificationResult 
                      ? 'bg-hilo-green/20 text-hilo-green border border-hilo-green/30' 
                      : 'bg-hilo-red/20 text-hilo-red border border-hilo-red/30'
                    }
                  `}
                  initial={{ opacity: 0, scale: 0.9 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.3 }}
                >
                  {verificationResult ? '‚úÖ Verification PASSED!' : '‚ùå Verification FAILED!'}
                </motion.div>
              )}
            </div>
          ) : (
            <div className="text-center py-8">
              <div className="text-4xl mb-4">üé≤</div>
              <p className="text-gray-400 mb-4">No games played yet</p>
              <motion.a
                href="/game"
                className="btn-hilo-primary"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
              >
                Play Your First Game
              </motion.a>
            </div>
          )}
        </motion.div>
      </div>
    </div>
  )
}

export default ProvablyFairPage
